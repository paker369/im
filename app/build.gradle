apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


apply plugin: 'com.google.protobuf'
kapt {
    generateStubs = true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion 28

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            // 配置protobuf源码目录
            proto {
                srcDir 'src/main/proto'
            }
        }
    }



    defaultConfig {
        applicationId "com.networkheizhu.chat"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"


        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

    }
}


protobuf {
    // 配置protoc编译器
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    // 这里配置生成目录，编译后会在build的目录下生成对应的java文件
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //lib
    implementation project(path: ':websocketlib')
    implementation project(path: ':emojilibrary')
    implementation project(":keyboardchangelib")
    implementation project(path: ':picture_library')


    //support
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'me.jessyan:arms:2.4.1'

    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["material"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["design"]
//    implementation rootProject.ext.dependencies["recyclerview"]
    /*view*/
    implementation rootProject.ext.dependencies["autolayout"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["rippleeffect"]
    implementation rootProject.ext.dependencies["magicindicator"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["roundedimageview"]
    implementation rootProject.ext.dependencies["smartrefreshlayout"]
    implementation rootProject.ext.dependencies["sneaker"]
    implementation rootProject.ext.dependencies["readmoretextview"]
    implementation rootProject.ext.dependencies["citypicker"]
    implementation rootProject.ext.dependencies["qmui"]

    //tool lib
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["fragmentation"]
    implementation rootProject.ext.dependencies["fragmentation-code"]
    implementation rootProject.ext.dependencies["fragmentation-swipeback"]
    implementation rootProject.ext.dependencies["bottomnavigationviewex"]
    implementation rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glide-compiler"]
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["utilcode"]
    implementation rootProject.ext.dependencies["qmuiteam-arch"]
    /*ARouter*/
    implementation rootProject.ext.dependencies["arouter"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
    //Butterknife 插件,很多人因为没加这个而报错,切记!!!
    implementation rootProject.ext.dependencies["butterknife"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["base-recyclerview-adapter"]
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    /*内存泄露检测 AppLifecyclesImpl 中初始化*/
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
//版本更新和下载apk框架适配安卓5.0，dex的特性
    implementation 'com.android.support:multidex:1.0.1'

    //指示器
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    //工具类
    implementation 'com.abrahamcaijin.commonutil:CommonUtil:1.0.3'


    //沉浸式状态栏
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'


    //pop
    implementation 'com.github.razerdp:BasePopup:2.2.20'
//对话框
    implementation 'com.kongzue.dialog:dialog:2.5.2'


    implementation 'com.github.pinguo-zhouwei:CustomPopwindow:2.1.1'
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'


    implementation 'com.github.chaychan:BottomBarLayout:2.0.2'

}
